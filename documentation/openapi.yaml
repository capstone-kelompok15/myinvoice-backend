openapi: 3.0.0
info:
  version: "1"
  title: Invoice API
  description: "[In Progress] = belum bisa diakses tapi fielnya ga bakal terlalu banyak berubah juga"
paths:
  /ping:
    get:
      tags:
        - Ping
      summary: "Test Ping"
      responses:
        "200": # status code
          description: Ping success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: string
                    default: pong

  /auth/login/admin:
    post:
      tags:
        - Auth
      summary: "[In Progress] Login admin"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string

      responses:
        "200": # status code
          description: Login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                      refresh_token:
                        type: string
        "400": # status code
          $ref: "#/components/responses/400"
        "401": # status code
          $ref: "#/components/responses/401"
        "500": # status code
          $ref: "#/components/responses/500"

  /auth/login/customer:
    post:
      tags:
        - Auth
      summary: Login customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                device_id:
                  type: string

      responses:
        "200": # status code
          description: Login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
        "400": # status code
          $ref: "#/components/responses/400"
        "401": # status code
          $ref: "#/components/responses/401"
        "500": # status code
          $ref: "#/components/responses/500"

  # Fix
  /auth/register/merchant:
    post:
      tags:
        - Auth
      summary: "Register admin"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  nullable: false
                password:
                  type: string
                  minLength: 8
                merchant_name:
                  type: string
                merchant_address:
                  type: string
                merchant_phone_number:
                  type: string
                merchant_banks:
                  type: array
                  items:
                    type: object
                    properties:
                      bank_id:
                        type: integer
                      on_behalf_of:
                        type: string
                      bank_number:
                        type: string

      responses:
        "201": # status code
          description: register admin success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: string
                    default: "Merchant Created!"
        "400": # status code
          $ref: "#/components/responses/400"

        "500": # status code
          $ref: "#/components/responses/500"
  /auth/register/customer:
    post:
      tags:
        - Auth
      summary: Register customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  nullable: false
                password:
                  type: string
                  minLength: 8
                full_name:
                  type: string

      responses:
        "201": # status code
          description: register customer success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: string
                    default: "User Created!"
        "400": # status code
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        default: bad request
                      detail:
                        type: string
                  data:
                    type: string
                    default: null

        "500": # status code
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        default: internal server error
                  data:
                    type: string
                    default: null

  /auth/admin/refresh:
    post:
      tags:
        - Auth
      summary: "[In Progress] Refresh token for admin"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
      responses:
        "201": # status code
          description: refresh token success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
        "400": # status code
          $ref: "#/components/responses/400"
        "500": # status code
          $ref: "#/components/responses/500"
  /auth/verification/customer:
    post:
      tags:
        - Auth
      summary: "Customer Email Verification"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                code:
                  type: string
      responses:
        "200": # status code
          description: Email Verification success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: string
                    default: Email Verified!
        "400": # status code
          $ref: "#/components/responses/400"
        "500": # status code
          $ref: "#/components/responses/500"
  /auth/verification/refresh:
    post:
      tags:
        - Auth
      summary: Refresh Email Verification Code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        "201": # status code
          description: Refresh Email Verification Code success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: string
                    default: Sent new code!
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /auth/reset/password/request/customer:
    post:
      tags:
        - Auth
      summary: "Customer Reset Password (Request Forgot password By Email)"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string

      responses:
        "200": # status code
          description: Send Email success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: string
                    default: Email Sent!
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
  /auth/reset/password/customer:
    post:
      tags:
        - Auth
      summary: "Customer Reset Password"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                code:
                  type: string

      responses:
        "200": # status code
          description: Customer Reset Password success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: string
                    default: Password was reset
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"

  /customers/me:
    get:
      security:
        - customerBearerAuth: []
      tags:
        - Customer
      summary: "Get customer"
      description: Get customer by id

      responses:
        "200": # status code
          description: Get customer by id success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      full_name:
                        type: string
                      email:
                        type: string
                      display_profile_picture_url:
                        type: string
                      address:
                        type: string
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"

    put:
      security:
        - customerBearerAuth: []
      tags:
        - Customer
      summary: "[In Progress] update customer"

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string

      responses:
        "200": # status code
          description: update customer success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: string
                    default: Update customer success!
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /customers:
    get:
      security:
        - merchantBearerAuth: []
      tags:
        - Customer
      summary: "[In Progress] Get all customer"
      parameters:
        - name: page
          in: query
          required: true
          description: filter by page
          schema:
            type: integer
            minimum: 1
        - name: limit
          in: query
          required: true
          description: filter by limit
          schema:
            type: integer
        - name: name
          in: query
          required: false
          description: search by name
          schema:
            type: string
        - name: email
          in: query
          required: false
          description: search by email
          schema:
            type: string
      responses:
        "200": # status code
          description: Get customer success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        email:
                          type: string
                        display_profile_url:
                          type: string
                        phone_number:
                          type: string
                        address:
                          type: string
                        created_at:
                          type: string
                        updated_at:
                          type: string
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"

  /customers/me/picture:
    patch:
      security:
        - customerBearerAuth: []
      tags:
        - Customer
      summary: "Update display profile"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profile_picture:
                  type: string
                  format: binary

      responses:
        "200": # status code
          description: update display profile success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: object
                    properties:
                      image_url:
                        type: string
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"

  /notifications:
    get:
      tags:
        - Notification
      summary: "[In Progress] Get notification "
      parameters:
        - name: page
          in: query
          required: true
          description: page
          schema:
            type: integer
            minimum: 1
        - name: limit
          in: query
          required: true
          description: page
          schema:
            type: integer
      responses:
        "200": # status code
          description: Get notifications success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        content:
                          type: string
                        created_at:
                          type: string
                        updated_at:
                          type: string
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
  /banks:
    get:
      tags:
        - Bank
      summary: "Get list of bank"
      responses:
        "200": # status code
          description: Get list of bank success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        code:
                          type: string
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"

  /merchants/banks:
    get:
      tags:
        - Merchant
      summary: "[In Progress] Get list of merchant bank"
      parameters:
        - name: merchant_id
          in: query
          required: true
          description: filter by merchant_id
          schema:
            type: string

      responses:
        "200": # status code
          description: Get list of bank success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        code:
                          type: string
                        on_behalf_of:
                          type: string
                        bank_number:
                          type: string
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /merchants/{id}:
    get:
      tags:
        - Merchant
      summary: "[In Progress] Get merchant by id"
      parameters:
        - name: id
          in: path
          required: true
          description: id
          schema:
            type: integer

      responses:
        "200": # status code
          description: Get merchant by id
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        merchant_name:
                          type: string
                        merchant_address:
                          type: string
                        merchant_phone_number:
                          type: string
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
    put:
      tags:
        - Merchant
      summary: "[In Progress] Update merchant by id"
      parameters:
        - name: id
          in: path
          required: true
          description: id
          schema:
            type: integer
      requestBody:
        description: payload
        content:
          application/json:
            schema:
              type: object
              properties:
                merchant_name:
                  type: string
                merchant_address:
                  type: string
                merchant_phone_number:
                  type: string

      responses:
        "200": # status code
          description: Update merchant by id success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: string
                    default: Update Merchant Success!

        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"

  /merchant/display_profile:
    put:
      tags:
        - Merchant
      summary: "[In Progress] Update display profile"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary

      responses:
        "200": # status code
          description: update display profile success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: object
                    properties:
                      display_profile_url:
                        type: string
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /invoices/count:
    get:
      tags:
        - Invoice
      summary: "[In Progress] Get invoices count"
      parameters:
        # - name: merchant_id
        #   in: query
        #   required: required
        #   description: filter by merchant_id
        #   schema:
        #     type : integer
        - name: payment_status
          in: query
          required: false
          description: filter by payment status
          schema:
            type: string
            enum: [unpaid, paid, pending]
        - name: range_time
          in: query
          required: false
          description: filter by last ... days
          schema:
            type: integer
        - name: customer_id
          in: query
          required: false
          description: filter by customer_id
          schema:
            type: integer
        - name: admin_id
          in: query
          required: false
          description: filter by admin_id
          schema:
            type: integer

      responses:
        "200": # status code
          description: Get invoices count success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: object
                    properties:
                      count:
                        type: integer
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /invoices/payment:
    get:
      tags:
        - Invoice
      summary: "[In Progress] Get total payment"
      parameters:
        - name: payment_status
          in: query
          required: false
          description: filter by payment status
          schema:
            type: string
            enum: [unpaid, paid, pending]

        - name: range_time
          in: query
          required: false
          description: filter by last ... days
          schema:
            type: integer
        - name: customer_id
          in: query
          required: false
          description: filter by customer_id
          schema:
            type: integer
        - name: admin_id
          in: query
          required: false
          description: filter by admin_id
          schema:
            type: integer

      responses:
        "200": # status code
          description: Get total payment success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: object
                    properties:
                      total_payment:
                        type: integer
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
  /invoices/{id}:
    get:
      tags:
        - Invoice
      summary: "[In Progress] Get invoice by id "
      parameters:
        - name: id
          in: path
          required: true
          description: id invoice
          schema:
            type: integer

      responses:
        "200": # status code
          description: Get invoice by id success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        payment_status:
                          type: string
                          enum: [unpaid, paid, pending]
                        total_price:
                          type: integer
                        due_at:
                          type: string
                        created_at:
                          type: string
                        updated_at:
                          type: string
                        merchant:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            display_profile_url:
                              type: string
                            address:
                              type: string
                        customer:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            email:
                              type: string
                            address:
                              type: string
                        payment_method:
                          type: object
                          properties:
                            payment_type:
                              type: string
                              enum: [manual, automatic]
                            bank_name:
                              type: string
                            bank_code:
                              type: string
                            bank_number:
                              type: string
                            on_behalf_of:
                              type: string
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              product:
                                type: string
                              quantity:
                                type: integer
                              price:
                                type: integer
                              total_price:
                                type: integer
                              created_at:
                                type: string
                              updated_at:
                                type: string
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /invoices:
    get:
      tags:
        - Invoice
      summary: "[In Progress] Get all invoices "
      parameters:
        - name: page
          in: query
          required: true
          description: page
          schema:
            type: integer
        - name: limit
          in: query
          required: true
          description: page
          schema:
            type: integer
        - name: payment_status
          in: query
          required: false
          description: filter by payment status
          schema:
            type: string
            enum: [unpaid, paid, pending]
        - name: merchant_id
          in: query
          required: false
          description: filter by merchant_id
          schema:
            type: integer
        - name: customer_id
          in: query
          required: false
          description: filter by customer_id
          schema:
            type: integer
        - name: range_time
          in: query
          required: false
          description: filter by last ... days
          schema:
            type: integer

      responses:
        "200": # status code
          description: Get all invoice success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        payment_status:
                          type: string
                          enum: [unpaid, paid, pending]
                        total_price:
                          type: integer
                        due_at:
                          type: string
                        created_at:
                          type: string
                        updated_at:
                          type: string
                        merchant:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            display_profile_url:
                              type: string
                            address:
                              type: string
                        customer:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            email:
                              type: string
                            address:
                              type: string
                        payment_method:
                          type: object
                          properties:
                            payment_type:
                              type: string
                              enum: [manual, automatic]
                            bank_name:
                              type: string
                            bank_code:
                              type: string
                            bank_number:
                              type: string
                            on_behalf_of:
                              type: string
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              product:
                                type: string
                              quantity:
                                type: integer
                              price:
                                type: integer
                              total_price:
                                type: integer
                              created_at:
                                type: string
                              updated_at:
                                type: string
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"

    post:
      tags:
        - Invoice
      summary: "[In Progress] Create invoices"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: integer
                due_at:
                  type: string
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      product:
                        type: string
                      quantity:
                        type: integer
                      price:
                        type: integer

      responses:
        "201": # status code
          description: Create invoice success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      payment_status:
                        type: string
                        enum: [unpaid, paid, pending]
                      total_price:
                        type: integer
                      due_at:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      merchant:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          display_profile_url:
                            type: string
                          address:
                            type: string
                      customer:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          email:
                            type: string
                          address:
                            type: string
                      payment_method:
                        type: object
                        properties:
                          payment_type:
                            type: string
                            enum: [manual, automatic]
                          bank_name:
                            type: string
                          bank_code:
                            type: string
                          bank_number:
                            type: string
                          on_behalf_of:
                            type: string
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            product:
                              type: string
                            quantity:
                              type: integer
                            price:
                              type: integer
                            total_price:
                              type: integer
                            created_at:
                              type: string
                            updated_at:
                              type: string
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
  /invoices/{id}/status:
    put:
      tags:
        - Invoice
      summary: "[In Progress] Update invoices status"
      parameters:
        - name: id
          in: path
          required: true
          description: invoice id
          schema:
            type: integer

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_status_id:
                  type: integer
      responses:
        "200": # status code
          description: Create invoice success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: string
                    default: Update invoice status success!
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"

  /invoices/{id}/approval_document:
    put:
      tags:
        - Invoice
      summary: "[In Progress] Update/Upload invoices approval document"
      parameters:
        - name: id
          in: path
          required: true
          description: invoice id
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200": # status code
          description: Update/Upload invoice approval document success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: string
                    default: Update invoice status success!
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /invoices/{id}/payment_method:
    put:
      tags:
        - Invoice
      summary: "[In Progress] Update payment method"
      parameters:
        - name: id
          in: path
          required: true
          description: invoice id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                merchant_bank_id:
                  type: integer

      responses:
        "200": # status code
          description: Update payment_method success
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: null
                  data:
                    type: string
                    default: Update payment method success!

components:
  responses:
    400:
      description: bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  message:
                    type: string
                    default: bad request
                  detail:
                    type: string
              data:
                type: string
                default: null
    401:
      description: unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  message:
                    type: string
                    default: unauthorized
              data:
                type: string
                default: null
    404:
      description: not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  message:
                    type: string
                    default: not found
              data:
                type: string
                default: null
    500:
      description: internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  message:
                    type: string
                    default: internal server error
              data:
                type: string
                default: null
  securitySchemes:
    customerBearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, arbitrary value for documentation purposes
    merchantBearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, arbitrary value for documentation purposes
servers:
  # Added by API Auto Mocking Plugin
  - description: Default
    url: https://api.staging.my-invoice.me/api/v1
